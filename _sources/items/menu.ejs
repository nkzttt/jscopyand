<!-- prettier-ignore -->
<% const localTitle = 'メニュー'; %>

<!-- prettier-ignore -->
<% const demo = `
<div class="demo" data-js-selector="source" data-js-attributes="demoHtml">
  <style>
    .demoMenu {
      position: fixed;
      top: 0;
      bottom: 0;
      left: 0;
      z-index: 99;
      width: 200px;
      background: white;
    }
  </style>
  <p data-jscopyand="menuTrigger">押してください</p>
  <div data-jscopyand="menuBody" class="demoMenu">
    <ul>
      <li>メニュ−１</li>
      <li>メニュ−２</li>
      <li>メニュ−３</li>
    </ul>
    <p data-jscopyand="menuClose">閉じる</p>
  </div>
</div>
`; %>

<!-- prettier-ignore -->
<% const demoScript = `
<script data-js-selector="sourceLazy" data-js-attributes="jscopyand">
  (function () {
    var menuTrigger = document.querySelector('[data-jscopyand="menuTrigger"]');
    var menuBody = document.querySelector('[data-jscopyand="menuBody"]');
    var menuClose = document.querySelector('[data-jscopyand="menuClose"]');
    var isVisible = false;
    var show = function () {
      menuBody.style.transform = 'translateX(0)';
      isVisible = true;
    };
    var hide = function () {
      menuBody.style.transform = 'translateX(' + -menuBody.offsetWidth + 'px)';
      isVisible = false;
    };
    hide();
    menuTrigger.addEventListener('click', function () {
      isVisible ? hide() : show();
    });
    menuClose.addEventListener('click', hide);
    setTimeout(function () {
      menuBody.style.transition = 'transform 300ms ease-out';
    }, 0);
  })();
</script>
`; %>

<!-- prettier-ignore -->
<% const howToUse = `
<div class="howToUse">
  <p class="howToUse__description">
    メニューを表示するためのトリガー要素を１つ用意し、<code class="inlineCode"
      >data-jscopyand="menuTrigger"</code
    >を付与してください。<br />
    メニューとそれを囲う要素を１つ用意し、囲った要素に<code class="inlineCode"
      >data-jscopyand="menuBody"</code
    >を付与してください。<br />
    メニューを閉じるためのトリガー要素を<code class="inlineCode"
      >data-jscopyand="menuBody"</code
    >の中に１つ用意し、<code class="inlineCode">data-jscopyand="menuClose"</code
    >を付与してください。<br />
    <code class="inlineCode">data-jscopyand="menuTrigger"</code
    >の要素は開閉どちらも行うことができます。<br />
    <code class="inlineCode">data-jscopyand="menuClose"</code
    >は閉じる専用です。<br />
  </p>
  <div>
    <p class="button" data-js-selector="accordion" data-js-attributes="remove">
      サンプルHTMLを表示する
    </p>
    <pre><code class="language-html" data-js-selector="demoHtml"></code></pre>
  </div>
</div>
`; %>

<!-- prettier-ignore -->
<% const jsDescription = `
<div class="jsDescription">
  <p class="button" data-js-selector="accordion" data-js-attributes="remove">
    JSコードの解説を見てみる
  </p>
  <p class="jsDescription__body">
    まずは３つの要素（開閉トリガー、メニュー本体、閉じる専用トリガー）を<code
      class="inlineCode"
      >document.querySelector</code
    >で取得し、それぞれ変数に格納します。<br />
    続いてメニューの表示状態を管理する変数<code class="inlineCode"
      >isVisible</code
    >を定義します。<br />
    メニューを開く用の関数<code class="inlineCode">show</code
    >と、メニューを閉じる用の関数<code class="inlineCode">hide</code
    >を定義し、初期状態が閉じた状態になるように<code class="inlineCode"
      >hide</code
    >関数を呼んでおきます。<br />
    <code class="inlineCode">hide</code
    >関数はメニュー要素の横幅を取得し、CSSで横幅分左側に移動させることで非表示にする、というものです。<br />
    次に開閉トリガー要素と閉じる専用トリガー要素に対してイベントを設定します。<br />
    開閉トリガー要素は変数<code class="inlineCode">isVisible</code
    >を見て開くか閉じるかを決めています。<br />
    最後にアニメーション用CSSをメニュー要素に追加します。<br />
    <code class="inlineCode">setTimeout</code
    >をしているのは、初期状態が閉じた状態になるように呼んだ関数<code
      class="inlineCode"
      >hide</code
    >がアニメーションにならないようにするためです。<br />
  </p>
</div>
`; %>

<!-- prettier-ignore -->
<%- include('../_ejsModules/itemLayout', { localTitle, demo, demoScript, howToUse, jsDescription }) %>
