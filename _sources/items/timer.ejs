<!-- prettier-ignore -->
<% const localTitle = 'タイマー'; %>

<!-- prettier-ignore -->
<% const demo = `
<div class="demo" data-js-selector="source" data-js-attributes="demoHtml">
  <p data-jscopyand="timer"></p>
</div>
<script>
  (function () {
    var dayTime = 1000 * 60 * 60 * 24;
    var afterThreeDayTime = new Date(Date.now() + 3 * dayTime);
    var year = afterThreeDayTime.getFullYear();
    var month = afterThreeDayTime.getMonth() + 1;
    var date = afterThreeDayTime.getDate();
    var padZero = function (num) {
      return String(num).length === 1 ? '0' + num : num;
    };
    var afterThreeDayStr =
      year + '-' + padZero(month) + '-' + padZero(date) + ' 23:59:59';
    var target = document.querySelector('[data-jscopyand="timer"]');
    target.dataset.jscopyandAttributes = afterThreeDayStr;
  })();
</script>
`; %>

<!-- prettier-ignore -->
<% const demoScript = `
<script data-js-selector="sourceLazy" data-js-attributes="jscopyand">
  (function () {
    var secondTime = 1000;
    var minuteTime = secondTime * 60;
    var hourTime = minuteTime * 60;
    var dayTime = hourTime * 24;
    var target = document.querySelector('[data-jscopyand="timer"]');
    var targetDateTime = new Date(target.dataset.jscopyandAttributes).getTime();
    var update = function () {
      var remainingTimeForDay = targetDateTime - Date.now();
      var day = Math.floor(remainingTimeForDay / dayTime);
      var remainingTimeForHour = remainingTimeForDay % dayTime;
      var hour = Math.floor(remainingTimeForHour / hourTime);
      var remainingTimeForMinute = remainingTimeForHour % hourTime;
      var minute = Math.floor(remainingTimeForMinute / minuteTime);
      var remainingTimeForSecond = remainingTimeForMinute % minuteTime;
      var second = Math.floor(remainingTimeForSecond / secondTime);
      target.innerText =
        '終了まで残り' +
        day +
        '日と' +
        hour +
        '時間' +
        minute +
        '分' +
        second +
        '秒です';
    };
    var animate = function () {
      update();
      window.requestAnimationFrame(animate);
    };
    animate();
  })();
</script>
`; %>

<!-- prettier-ignore -->
<% const howToUse = `
<div class="howToUse">
  <p class="howToUse__description">
    任意の空の要素を用意し、そこに<code class="inlineCode"
      >data-jscopyand="timer"</code
    >と、期限となる日時を<code class="inlineCode"
      >data-jscopyand-attributes="2021-01-01 23:59:59"</code
    >のような形式で付与してください。<br />
  </p>
  <div>
    <p class="button" data-js-selector="accordion" data-js-attributes="remove">
      サンプルHTMLを表示する
    </p>
    <pre><code class="language-html" data-js-selector="demoHtml"></code></pre>
  </div>
</div>
`; %>

<!-- prettier-ignore -->
<% const jsDescription = `
<div class="jsDescription">
  <p
    class="button"
    data-js-selector="accordion"
    data-js-attributes="remove"
    onclick="gtag('event', 'cv', { event_category: 'openedJsCodes' })"
  >
    JSコードの解説を見てみる
  </p>
  <div class="jsDescription__body">
    <p class="jsDescription__body__text">
      最初に時間計算をするための変数を秒単位から日単位まで準備します。<br />
    </p>
    <pre
      class="jsDescription__body__code"
    ><code class="language-js" data-js-selector="quote" data-js-attributes="jscopyand, 2, 5"></code></pre>
    <p class="jsDescription__body__text">
      期限取得元かつ描画先となる要素を取得し、変数に格納します。<br />
      <code class="inlineCode">data-jscopyand-attributes</code>属性には<code
        class="inlineCode"
        >new Date</code
      >可能な文字列が入っているため、その値で<code class="inlineCode">Date</code
      >作成し、<code class="inlineCode">getTime</code
      >でミリ秒を取得します。<br />
    </p>
    <pre
      class="jsDescription__body__code"
    ><code class="language-js" data-js-selector="quote" data-js-attributes="jscopyand, 6, 7"></code></pre>
    <p class="jsDescription__body__text">
      残り時間を描画するための関数を定義していきます。<br />
      残り時間は変数<code class="inlineCode">targetDateTime</code
      >のミリ秒から、<code class="inlineCode">Date.now</code
      >で取得できる現在時刻のミリ秒を引くことで求めることができます。<br />
      最初に定義した時間計算をするための変数を使い、日・時間・分・秒を求めていきます。<br />
      結果を<code class="inlineCode">target.innerText</code>で描画します。<br />
    </p>
    <pre
      class="jsDescription__body__code"
    ><code class="language-js" data-js-selector="quote" data-js-attributes="jscopyand, 8, 27"></code></pre>
    <p class="jsDescription__body__text">
      アニメーションを設定します。<br />
      <code class="inlineCode">requestAnimationFrame</code
      >に自分自身を呼ぶ関数を定義することで、アニメーションに最適な形で関数をループ処理してくれます。<br />
    </p>
    <pre
      class="jsDescription__body__code"
    ><code class="language-js" data-js-selector="quote" data-js-attributes="jscopyand, 28, 32"></code></pre>
  </div>
</div>
`; %>

<!-- prettier-ignore -->
<%- include('../_ejsModules/itemLayout', { localTitle, demo, demoScript, howToUse, jsDescription }) %>
