<!-- prettier-ignore -->
<% const localTitle = 'テキストコピー'; %>

<!-- prettier-ignore -->
<% const demo = `
<div class="demo" data-js-selector="source" data-js-attributes="demoHtml">
  <p data-jscopyand="copytext" data-jscopyand-attributes="target">
    押してください
  </p>
  <p id="target">
    このテキストをコピーします。<br />
    1234567890<br />
    ABCDEFGHIJKLMN<br />
  </p>
</div>
`; %>

<!-- prettier-ignore -->
<% const demoScript = `
<script data-js-selector="sourceLazy" data-js-attributes="jscopyand">
  (function () {
    var triggers = document.querySelectorAll('[data-jscopyand="copytext"]');
    triggers.forEach(function (trigger) {
      trigger.addEventListener('click', function () {
        var target = document.querySelector(
          '#' + this.dataset.jscopyandAttributes
        );
        if (!target) return;
        window.navigator.clipboard
          .writeText(target.innerText)
          .then(function () {
            alert('コピーしました。');
          });
      });
    });
  })();
</script>
`; %>

<!-- prettier-ignore -->
<% const howToUse = `
<div class="howToUse">
  <p class="howToUse__description">
    コピーのトリガーになる任意の要素を用意し、<code class="inlineCode"
      >data-jscopyand="copytext"</code
    >を付与してください。<br />
    コピーされるテキストを用意し、それを囲う要素に任意の<code class="inlineCode"
      >id</code
    >を付与してください。<br />
    コピーのトリガーになる要素に<code class="inlineCode"
      >data-jscopyand-attributes="id名"</code
    >を付与してください。<br />
  </p>
  <div>
    <p class="button" data-js-selector="accordion" data-js-attributes="remove">
      サンプルHTMLを表示する
    </p>
    <pre><code class="language-html" data-js-selector="demoHtml"></code></pre>
  </div>
</div>
`; %>

<!-- prettier-ignore -->
<% const jsDescription = `
<div class="jsDescription">
  <p
    class="button"
    data-js-selector="accordion"
    data-js-attributes="remove"
    onclick="gtag('event', 'cv', { event_category: 'openedJsCodes' })"
  >
    JSコードの解説を見てみる
  </p>
  <div class="jsDescription__body">
    <p class="jsDescription__body__text">
      このテキストコピー機能は１画面で複数の設置を想定しているため、<code
        class="inlineCode"
        >document.querySelectorAll</code
      >でトリガーとなる全ての要素を取得し、変数に格納します。<br />
    </p>
    <pre
      class="jsDescription__body__code"
    ><code class="language-js" data-js-selector="quote" data-js-attributes="jscopyand, 2"></code></pre>
    <p class="jsDescription__body__text">
      取得した全トリガー要素に対して反復処理を行い、イベントを設定していきます。<br />
    </p>
    <pre
      class="jsDescription__body__code"
    ><code class="language-js" data-js-selector="quote" data-js-attributes="jscopyand, 3, 4"></code></pre>
    <p class="jsDescription__body__text">
      トリガー要素が持っている<code class="inlineCode"
        >data-jscopyand-attributes</code
      >属性を使い、コピーの対象となる要素を特定します。<br />
      もしも対象の要素が存在しなかった場合は処理を終了します。<br />
    </p>
    <pre
      class="jsDescription__body__code"
    ><code class="language-js" data-js-selector="quote" data-js-attributes="jscopyand, 5, 8"></code></pre>
    <p class="jsDescription__body__text">
      コピーには<code class="inlineCode"
        >window.navigator.clipboard.writeText</code
      >という機能を使用します。<br />
      引数にコピーする文字列<code class="inlineCode">target.innerText</code
      >を渡します。<br />
      コピーが完了した時の処理を<code class="inlineCode">then</code
      >というメソッドに関数を渡してしています。<br />
      本デモではアラートでコピー完了をお知らせします。<br />
    </p>
    <pre
      class="jsDescription__body__code"
    ><code class="language-js" data-js-selector="quote" data-js-attributes="jscopyand, 9, 13"></code></pre>
  </div>
</div>
`; %>

<!-- prettier-ignore -->
<%- include('../_ejsModules/itemLayout', { localTitle, demo, demoScript, howToUse, jsDescription }) %>
