<!-- prettier-ignore -->
<% const localTitle = 'モーダル'; %>

<!-- prettier-ignore -->
<% const demo = `
<div class="demo" data-js-selector="source" data-js-attributes="demoHtml">
  <p data-jscopyand="modalTrigger">押してください</p>
  <div data-jscopyand="modalBody">
    <p>任意のコンテンツを置いてください。</p>
    <p>任意のコンテンツを置いてください。</p>
    <p>任意のコンテンツを置いてください。</p>
    <p data-jscopyand="modalClose">閉じる</p>
  </div>
</div>
`; %>

<!-- prettier-ignore -->
<% const demoScript = `
<script data-js-selector="sourceLazy" data-js-attributes="jscopyand">
  (function () {
    var trigger = document.querySelector('[data-jscopyand="modalTrigger"]');
    var body = document.querySelector('[data-jscopyand="modalBody"]');
    var close = document.querySelector('[data-jscopyand="modalClose"]');
    var modal = document.createElement('div');
    modal.style =
      'position: fixed; top: 0; bottom: 0; left: 0; right: 0; z-index: 99; display: flex; justify-content: center; align-items: center;';
    var overlay = document.createElement('div');
    overlay.style =
      'position: absolute; top: 0; bottom: 0; left: 0; right: 0; background: rgba(0,0,0,0.6)';
    var container = document.createElement('div');
    container.style = 'position: relative; z-index: 1; background: white;';
    body.parentElement.append(modal);
    modal.append(overlay);
    modal.append(container);
    container.append(body);
    var show = function () {
      modal.style.display = 'flex';
    };
    var hide = function () {
      modal.style.display = 'none';
    };
    hide();
    trigger.addEventListener('click', show);
    overlay.addEventListener('click', hide);
    close.addEventListener('click', hide);
  })();
</script>
`; %>

<!-- prettier-ignore -->
<% const howToUse = `
<div class="howToUse">
  <p class="howToUse__description">
    モーダルを表示するためのトリガー要素を１つ用意し、そこに<code
      class="inlineCode"
      >data-jscopyand="modalTrigger"</code
    >を付与してください。<br />
    モーダル内に表示する任意の要素と、それを囲う<code class="inlineCode"
      >div</code
    >要素を１つ用意し、囲った要素に<code class="inlineCode"
      >data-jscopyand="modalBody"</code
    >を付与してください。<br />
    モーダルを閉じるためのトリガー要素を<code class="inlineCode"
      >data-jscopyand="modalBody"</code
    >の中に１つ用意し、<code class="inlineCode"
      >data-jscopyand="modalClose"</code
    >を付与してください。<br />
  </p>
  <div>
    <p class="button" data-js-selector="accordion" data-js-attributes="remove">
      サンプルHTMLを表示する
    </p>
    <pre><code class="language-html" data-js-selector="demoHtml"></code></pre>
  </div>
</div>
`; %>

<!-- prettier-ignore -->
<% const jsDescription = `
<div class="jsDescription">
  <p class="button" data-js-selector="accordion" data-js-attributes="remove">
    JSコードの解説を見てみる
  </p>
  <div class="jsDescription__body">
    <p class="jsDescription__body__text">
      まずは３つの要素（開く専用トリガー、モーダル本体、閉じる専用トリガー）を<code
        class="inlineCode"
        >document.querySelector</code
      >で取得し、それぞれ変数に格納します。<br />
      続いてモーダルの表示を調整していきます。<br />
      全体を囲う<code class="inlineCode">div</code>要素を変数<code
        class="inlineCode"
        >modal</code
      >で定義します。<br />
      スタイルは最前面に固定表示されるものにします。<br />
      画面を黒の半透明で覆うための<code class="inlineCode">div</code
      >要素を変数<code class="inlineCode">overlay</code>で定義します。<br />
      スタイルは<code class="inlineCode">modal</code
      >に対して絶対配置で全体を覆う様にし、背景色を黒の半透明に指定します。<br />
      モーダル本体を囲う<code class="inlineCode">div</code>要素を変数<code
        class="inlineCode"
        >container</code
      >で定義します。<br />
      スタイルは<code class="inlineCode">overlay</code
      >よりも前面に出るようにし、背景色を白に指定します。<br />
      次にJavaScriptで作った要素をHTMLに追加していきます。<br />
      モーダル本体と並列になるように<code class="inlineCode">modal</code
      >を配置し、その中に<code class="inlineCode">overlay</code>と<code
        class="inlineCode"
        >container</code
      >を配置します。<br />
      モーダル本体は<code class="inlineCode">container</code
      >の中に移動します。<br />
      最後にモーダルの表示を切り替えるための関数を定義します。<br />
      関数<code class="inlineCode">show</code>、関数<code class="inlineCode"
        >hide</code
      >は<code class="inlineCode">modal</code>のスタイル<code class="inlineCode"
        >display</code
      >を切り替えるだけのシンプルなものです。<br />
      <code class="inlineCode">modal</code>の<code class="inlineCode"
        >display</code
      >は表示調整の際に<code class="inlineCode">flex</code
      >にしているため、関数<code class="inlineCode">show</code>の設定値は<code
        class="inlineCode"
        >flex</code
      >になります。<br />
      初期状態を非表示にするため<code class="inlineCode">hide</code
      >を呼んでおき、各要素にクリックイベントを設定したら完成です。<br />
    </p>
  </div>
</div>
`; %>

<!-- prettier-ignore -->

<%- include('../_ejsModules/itemLayout', { localTitle, demo, demoScript, howToUse, jsDescription }) %>
