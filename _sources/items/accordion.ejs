<!-- prettier-ignore -->
<% const localTitle = '開閉項目（アコーディオン）'; %>

<!-- prettier-ignore -->
<% const demo = `
<div class="demo" data-js-selector="source" data-js-attributes="demoHtml">
  <p data-jscopyand="accordion">押してください</p>
  <p>
    ありがとうございます！<br />
    あなたは１番目のアイテムを開きました！<br />
  </p>
  <p data-jscopyand="accordion">押してください</p>
  <p>
    ありがとうございます！<br />
    あなたは２番目のアイテムを開きました！<br />
  </p>
  <p data-jscopyand="accordion">押してください</p>
  <p>
    ありがとうございます！<br />
    あなたは３番目のアイテムを開きました！<br />
  </p>
</div>
`; %>

<!-- prettier-ignore -->
<% const demoScript = `
<script data-js-selector="sourceLazy" data-js-attributes="jscopyand">
  (function () {
    var triggers = document.querySelectorAll('[data-jscopyand="accordion"]');
    triggers.forEach(function (trigger) {
      trigger.nextElementSibling.style.display = 'none';
      trigger.addEventListener('click', function () {
        this.nextElementSibling.style.display = this.nextElementSibling.style
          .display
          ? ''
          : 'none';
      });
    });
  })();
</script>
`; %>

<!-- prettier-ignore -->
<% const howToUse = `
<div class="howToUse">
  <p class="howToUse__description">
    HTMLでは隣接する２つの要素が必要になります。<br />
    １つ目がトリガー要素です。<br />
    ２つ目が開閉対象です。<br />
    １つ目のトリガー要素に<code class="inlineCode"
      >data-jscopyand="accordion"</code
    >を付与してください。<br />
  </p>
  <div>
    <p class="button" data-js-selector="accordion" data-js-attributes="remove">
      サンプルHTMLを表示する
    </p>
    <pre><code class="language-html" data-js-selector="demoHtml"></code></pre>
  </div>
</div>
`; %>

<!-- prettier-ignore -->
<% const jsDescription = `
<div class="jsDescription">
  <p
    class="button"
    data-js-selector="accordion"
    data-js-attributes="remove"
    onclick="gtag('event', 'cv', { event_category: 'openedJsCodes' })"
  >
    JSコードの解説を見てみる
  </p>
  <div class="jsDescription__body">
    <p class="jsDescription__body__text">
      このアコーディオン機能は１画面で複数の設置を想定しているため、<code
        class="inlineCode"
        >document.querySelectorAll</code
      >でトリガーとなる全ての要素を取得し、変数に格納します。<br />
    </p>
    <pre
      class="jsDescription__body__code"
    ><code class="language-js" data-js-selector="quote" data-js-attributes="jscopyand, 2"></code></pre>
    <p class="jsDescription__body__text">
      取得した全トリガー要素に対して反復処理を行っていきます。<br />
    </p>
    <pre
      class="jsDescription__body__code"
    ><code class="language-js" data-js-selector="quote" data-js-attributes="jscopyand, 3"></code></pre>
    <p class="jsDescription__body__text">
      トリガー要素に隣接する次の要素をアコーディオンの本文とし、初期状態を非表示にします。<br />
    </p>
    <pre
      class="jsDescription__body__code"
    ><code class="language-js" data-js-selector="quote" data-js-attributes="jscopyand, 4"></code></pre>
    <p class="jsDescription__body__text">
      トリガー要素が押された時の処理を登録します。<br />
    </p>
    <pre
      class="jsDescription__body__code"
    ><code class="language-js" data-js-selector="quote" data-js-attributes="jscopyand, 5"></code></pre>
    <p class="jsDescription__body__text">
      <code class="inlineCode">display</code
      >スタイルが既に指定されていれば消す、指定されてなければ<code
        class="inlineCode"
        >none</code
      >を付与する、という内容です。<br />
    </p>
    <pre
      class="jsDescription__body__code"
    ><code class="language-js" data-js-selector="quote" data-js-attributes="jscopyand, 6, 9"></code></pre>
  </div>
</div>
`; %>

<!-- prettier-ignore -->
<%- include('../_ejsModules/itemLayout', { localTitle, demo, demoScript, howToUse, jsDescription }) %>
